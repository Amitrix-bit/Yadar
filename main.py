import base64
exec((base64.b64decode(b"""ZnJvbSBmbGV0IGltcG9ydCBhcHAsIEFsZXJ0RGlhbG9nLCBFbGV2YXRlZEJ1dHRvbiwgVGV4dFRoZW1lU3R5bGUsIFBhZ2UsIENoZWNrYm94LCBBcHBWaWV3LCBTY3JvbGxNb2RlLCBPdXRsaW5lZEJ1dHRvbiwgRmxvYXRpbmdBY3Rpb25CdXR0b24sIFJvdywgVGV4dCwgVGFiLCBUYWJzLCBUZXh0RmllbGQsIFVzZXJDb250cm9sLCBDb2x1bW4sIGljb25zLCBjb2xvcnMsIEljb25CdXR0b24sIENyb3NzQXhpc0FsaWdubWVudCwgTWFpbkF4aXNBbGlnbm1lbnQKCgpjbGFzcyBUYXNrKFVzZXJDb250cm9sKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB0YXNrX25hbWUsIHRhc2tfc3RhdHVzX2NoYW5nZSwgdGFza19kZWxldGUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oKQogICAgICAgIHNlbGYuY29tcGxldGVkID0gRmFsc2UKICAgICAgICBzZWxmLnRhc2tfbmFtZSA9IHRhc2tfbmFtZQogICAgICAgIHNlbGYudGFza19zdGF0dXNfY2hhbmdlID0gdGFza19zdGF0dXNfY2hhbmdlCiAgICAgICAgc2VsZi50YXNrX2RlbGV0ZSA9IHRhc2tfZGVsZXRlCgogICAgZGVmIGJ1aWxkKHNlbGYpOgogICAgICAgIHNlbGYuZGlzcGxheV90YXNrID0gQ2hlY2tib3goCiAgICAgICAgICAgIHZhbHVlPUZhbHNlLCBsYWJlbD1zZWxmLnRhc2tfbmFtZSwgb25fY2hhbmdlPXNlbGYuc3RhdHVzX2NoYW5nZWQKICAgICAgICApCiAgICAgICAgc2VsZi5lZGl0X25hbWUgPSBUZXh0RmllbGQoZXhwYW5kPTEpCiAgICAgICAgc2VsZi5kaXNwbGF5X3ZpZXcgPSBSb3coCiAgICAgICAgICAgIGFsaWdubWVudD1NYWluQXhpc0FsaWdubWVudC5TUEFDRV9CRVRXRUVOLAogICAgICAgICAgICB2ZXJ0aWNhbF9hbGlnbm1lbnQ9Q3Jvc3NBeGlzQWxpZ25tZW50LkNFTlRFUiwKICAgICAgICAgICAgY29udHJvbHM9WwogICAgICAgICAgICAgICAgc2VsZi5kaXNwbGF5X3Rhc2ssCiAgICAgICAgICAgICAgICBSb3coCiAgICAgICAgICAgICAgICAgICAgc3BhY2luZz0wLAogICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzPVsKICAgICAgICAgICAgICAgICAgICAgICAgSWNvbkJ1dHRvbigKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb249aWNvbnMuQ1JFQVRFX09VVExJTkVELAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcD0i2YjbjNix2KfbjNi0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uX2NsaWNrPXNlbGYuZWRpdF9jbGlja2VkLAogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICBJY29uQnV0dG9uKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbnMuREVMRVRFX09VVExJTkUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwPSLYrdiw2YEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb25fY2xpY2s9c2VsZi5kZWxldGVfY2xpY2tlZCwKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSwKICAgICAgICApCiAgICAgICAgc2VsZi5lZGl0X3ZpZXcgPSBSb3coCiAgICAgICAgICAgIHZpc2libGU9RmFsc2UsCiAgICAgICAgICAgIGFsaWdubWVudD1NYWluQXhpc0FsaWdubWVudC5TUEFDRV9CRVRXRUVOLAogICAgICAgICAgICB2ZXJ0aWNhbF9hbGlnbm1lbnQ9Q3Jvc3NBeGlzQWxpZ25tZW50LkNFTlRFUiwKICAgICAgICAgICAgY29udHJvbHM9WwogICAgICAgICAgICAgICAgc2VsZi5lZGl0X25hbWUsCiAgICAgICAgICAgICAgICBJY29uQnV0dG9uKAogICAgICAgICAgICAgICAgICAgIGljb249aWNvbnMuRE9ORV9PVVRMSU5FX09VVExJTkVELAogICAgICAgICAgICAgICAgICAgIGljb25fY29sb3I9Y29sb3JzLkdSRUVOLAogICAgICAgICAgICAgICAgICAgIHRvb2x0aXA9Itin2LnZhdin2YQiLAogICAgICAgICAgICAgICAgICAgIG9uX2NsaWNrPXNlbGYuc2F2ZV9jbGlja2VkLAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSwKICAgICAgICApCiAgICAgICAgcmV0dXJuIENvbHVtbihjb250cm9scz1bc2VsZi5kaXNwbGF5X3ZpZXcsIHNlbGYuZWRpdF92aWV3XSkKCiAgICBhc3luYyBkZWYgZWRpdF9jbGlja2VkKHNlbGYsIGUpOgogICAgICAgIHNlbGYuZWRpdF9uYW1lLnZhbHVlID0gc2VsZi5kaXNwbGF5X3Rhc2subGFiZWwKICAgICAgICBzZWxmLmRpc3BsYXlfdmlldy52aXNpYmxlID0gRmFsc2UKICAgICAgICBzZWxmLmVkaXRfdmlldy52aXNpYmxlID0gVHJ1ZQogICAgICAgIGF3YWl0IHNlbGYudXBkYXRlX2FzeW5jKCkKCiAgICBhc3luYyBkZWYgc2F2ZV9jbGlja2VkKHNlbGYsIGUpOgogICAgICAgIHNlbGYuZGlzcGxheV90YXNrLmxhYmVsID0gc2VsZi5lZGl0X25hbWUudmFsdWUKICAgICAgICBzZWxmLmRpc3BsYXlfdmlldy52aXNpYmxlID0gVHJ1ZQogICAgICAgIHNlbGYuZWRpdF92aWV3LnZpc2libGUgPSBGYWxzZQogICAgICAgIGF3YWl0IHNlbGYudXBkYXRlX2FzeW5jKCkKCiAgICBhc3luYyBkZWYgc3RhdHVzX2NoYW5nZWQoc2VsZiwgZSk6CiAgICAgICAgc2VsZi5jb21wbGV0ZWQgPSBzZWxmLmRpc3BsYXlfdGFzay52YWx1ZQogICAgICAgIGF3YWl0IHNlbGYudGFza19zdGF0dXNfY2hhbmdlKHNlbGYpCgogICAgYXN5bmMgZGVmIGRlbGV0ZV9jbGlja2VkKHNlbGYsIGUpOgogICAgICAgIGF3YWl0IHNlbGYudGFza19kZWxldGUoc2VsZikKCgpjbGFzcyBUb2RvQXBwKFVzZXJDb250cm9sKToKICAgIGRlZiBidWlsZChzZWxmKToKICAgICAgICBzZWxmLm5ld190YXNrID0gVGV4dEZpZWxkKAogICAgICAgICAgICBoaW50X3RleHQ9ItmC2LHYp9ix2Ycg2obaqdin2LEg2qnZhtuM2J8iLAogICAgICAgICAgICBvbl9zdWJtaXQ9c2VsZi5hZGRfY2xpY2tlZCwKICAgICAgICAgICAgZXhwYW5kPVRydWUsCiAgICAgICAgICAgIHRleHRfYWxpZ249IlJJR0hUIgogICAgICAgICkKICAgICAgICBzZWxmLnRhc2tzID0gQ29sdW1uKCkKICAgICAgICBzZWxmLmZpbHRlciA9IFRhYnMoCiAgICAgICAgICAgIHNjcm9sbGFibGU9RmFsc2UsCiAgICAgICAgICAgIHNlbGVjdGVkX2luZGV4PTAsCiAgICAgICAgICAgIG9uX2NoYW5nZT1zZWxmLnRhYnNfY2hhbmdlZCwKICAgICAgICAgICAgdGFicz1bVGFiKHRleHQ9ItmH2YXZhyIpLCBUYWIodGV4dD0i2YHYudin2YQiKSwKICAgICAgICAgICAgICAgICAgVGFiKHRleHQ9Itiq2qnZhduM2YQg2LTYr9mHIildLAogICAgICAgICkKICAgICAgICBzZWxmLml0ZW1zX2xlZnQgPSBUZXh0KCLZh9mF2Ycg2qnYp9mF2YQg2LTYr9mGIiwgdGV4dF9hbGlnbj0iUklHSFQiKQogICAgICAgIHJldHVybiBDb2x1bW4oCiAgICAgICAgICAgIHdpZHRoPTEwMDAsCiAgICAgICAgICAgIGNvbnRyb2xzPVsKICAgICAgICAgICAgICAgIFJvdygKICAgICAgICAgICAgICAgICAgICBjb250cm9scz1bCiAgICAgICAgICAgICAgICAgICAgICAgIEVsZXZhdGVkQnV0dG9uKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj1pY29ucy5TVVBFUlZJU0VEX1VTRVJfQ0lSQ0xFX09VVExJTkVELCB0ZXh0PSJBbWlycmV6YSIsIGNvbG9yPSJncmVlbiIsIGRpc2FibGVkPVRydWUpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIFJvdygKICAgICAgICAgICAgICAgICAgICBjb250cm9scz1bCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubmV3X3Rhc2ssCiAgICAgICAgICAgICAgICAgICAgICAgIEZsb2F0aW5nQWN0aW9uQnV0dG9uKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj1pY29ucy5BREQsIG9uX2NsaWNrPXNlbGYuYWRkX2NsaWNrZWQKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIENvbHVtbigKICAgICAgICAgICAgICAgICAgICBzcGFjaW5nPTI1LAogICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzPVsKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5maWx0ZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudGFza3MsCiAgICAgICAgICAgICAgICAgICAgICAgIFJvdygKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWdubWVudD1NYWluQXhpc0FsaWdubWVudC5TUEFDRV9CRVRXRUVOLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWxfYWxpZ25tZW50PUNyb3NzQXhpc0FsaWdubWVudC5DRU5URVIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9scz1bCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pdGVtc19sZWZ0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE91dGxpbmVkQnV0dG9uKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PSLYrdiw2YEg2KraqdmF24zZhCDYtNiv2Ycg2YfYpyIsIG9uX2NsaWNrPXNlbGYuY2xlYXJfY2xpY2tlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICkKCiAgICBhc3luYyBkZWYgYWRkX2NsaWNrZWQoc2VsZiwgZSk6CiAgICAgICAgaWYgc2VsZi5uZXdfdGFzay52YWx1ZToKICAgICAgICAgICAgdGFzayA9IFRhc2soc2VsZi5uZXdfdGFzay52YWx1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi50YXNrX3N0YXR1c19jaGFuZ2UsIHNlbGYudGFza19kZWxldGUpCiAgICAgICAgICAgIHNlbGYudGFza3MuY29udHJvbHMuYXBwZW5kKHRhc2spCiAgICAgICAgICAgIHNlbGYubmV3X3Rhc2sudmFsdWUgPSAiIgogICAgICAgICAgICBhd2FpdCBzZWxmLm5ld190YXNrLmZvY3VzX2FzeW5jKCkKICAgICAgICAgICAgYXdhaXQgc2VsZi51cGRhdGVfYXN5bmMoKQoKICAgIGFzeW5jIGRlZiB0YXNrX3N0YXR1c19jaGFuZ2Uoc2VsZiwgdGFzayk6CiAgICAgICAgYXdhaXQgc2VsZi51cGRhdGVfYXN5bmMoKQoKICAgIGFzeW5jIGRlZiB0YXNrX2RlbGV0ZShzZWxmLCB0YXNrKToKICAgICAgICBzZWxmLnRhc2tzLmNvbnRyb2xzLnJlbW92ZSh0YXNrKQogICAgICAgIGF3YWl0IHNlbGYudXBkYXRlX2FzeW5jKCkKCiAgICBhc3luYyBkZWYgdGFic19jaGFuZ2VkKHNlbGYsIGUpOgogICAgICAgIGF3YWl0IHNlbGYudXBkYXRlX2FzeW5jKCkKCiAgICBhc3luYyBkZWYgY2xlYXJfY2xpY2tlZChzZWxmLCBlKToKICAgICAgICBmb3IgdGFzayBpbiBzZWxmLnRhc2tzLmNvbnRyb2xzWzpdOgogICAgICAgICAgICBpZiB0YXNrLmNvbXBsZXRlZDoKICAgICAgICAgICAgICAgIGF3YWl0IHNlbGYudGFza19kZWxldGUodGFzaykKCiAgICBhc3luYyBkZWYgdXBkYXRlX2FzeW5jKHNlbGYpOgogICAgICAgIHN0YXR1cyA9IHNlbGYuZmlsdGVyLnRhYnNbc2VsZi5maWx0ZXIuc2VsZWN0ZWRfaW5kZXhdLnRleHQKICAgICAgICBjb3VudCA9IDAKICAgICAgICBmb3IgdGFzayBpbiBzZWxmLnRhc2tzLmNvbnRyb2xzOgogICAgICAgICAgICB0YXNrLnZpc2libGUgPSAoCiAgICAgICAgICAgICAgICBzdGF0dXMgPT0gItmH2YXZhyIKICAgICAgICAgICAgICAgIG9yIChzdGF0dXMgPT0gItmB2LnYp9mEIiBhbmQgdGFzay5jb21wbGV0ZWQgPT0gRmFsc2UpCiAgICAgICAgICAgICAgICBvciAoc3RhdHVzID09ICLYqtqp2YXbjNmEINi02K/ZhyIgYW5kIHRhc2suY29tcGxldGVkKQogICAgICAgICAgICApCiAgICAgICAgICAgIGlmIG5vdCB0YXNrLmNvbXBsZXRlZDoKICAgICAgICAgICAgICAgIGNvdW50ICs9IDEKICAgICAgICBzZWxmLml0ZW1zX2xldmFsdWUgPSBmIntjb3VudH0g2KrYudiv2KfYryDaqdin2LHZh9in24wg2YbYp9iq2YXYp9mFIDoiCiAgICAgICAgYXdhaXQgc3VwZXIoKS51cGRhdGVfYXN5bmMoKQoKCmFzeW5jIGRlZiBtYWluKHBhZ2U6IFBhZ2UpOgogICAgcGFnZS50aXRsZSA9ICLbjNin2K/Yp9ixIgogICAgcGFnZS5ob3Jpem9udGFsX2FsaWdubWVudCA9IENyb3NzQXhpc0FsaWdubWVudC5DRU5URVIKICAgIHBhZ2Uuc2Nyb2xsID0gU2Nyb2xsTW9kZS5BREFQVElWRQoKICAgIGFzeW5jIGRlZiBjbG9zZV9kbGcoZSk6CiAgICAgICAgZGxnX21vZGFsLm9wZW4gPSBGYWxzZQogICAgICAgIGF3YWl0IHBhZ2UudXBkYXRlX2FzeW5jKCkKICAgIGRsZ19tb2RhbCA9IEFsZXJ0RGlhbG9nKAogICAgICAgIG1vZGFsPVRydWUsCiAgICAgICAgdGl0bGU9VGV4dCgi2LnYttmI24zYqi/ZiNix2YjYryIsCiAgICAgICAgICAgICAgICAgICB0ZXh0X2FsaWduPSJDRU5URVIiLAogICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgICApLAogICAgICAgIGNvbnRlbnQ9VGV4dCgKICAgICAgICAgICAgItmE2LfZgdinINmG2KfZhSDaqdin2LHYqNix24wg2Ygg2b7Ys9mI2LHYryDYrtmI2K8g2LHYpyDZiNin2LHYryDaqdmG24zYr9iMINiv2LEg2LXZiNix2Kog2YbYr9in2LTYqtmGINin2qnYp9mG2KrYjCDYqNmHINi12YjYsdiqINin2KrZiNmF2KfYqiDYs9in2K7YqtmHINmF24zYtNmI2K8iKSwKICAgICAgICBhY3Rpb25zPVsKICAgICAgICAgICAgVGV4dEZpZWxkKGxhYmVsPSLZhtin2YUg2qnYp9ix2KjYsduMIiwKICAgICAgICAgICAgICAgICAgICAgIGljb249aWNvbnMuUEVSU09OLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiLAogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PTkwLAogICAgICAgICAgICAgICAgICAgICAgdGV4dF9hbGlnbj0iTGVmdCIsCiAgICAgICAgICAgICAgICAgICAgICBtYXhfbGVuZ3RoPTIwLAoKICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgIFRleHRGaWVsZChsYWJlbD0i2LHZhdiyINi52KjZiNixIiwKICAgICAgICAgICAgICAgICAgICAgIGljb249aWNvbnMuUEFTU1dPUkQsCiAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZD1UcnVlLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiLAogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PTkwLAogICAgICAgICAgICAgICAgICAgICAgdGV4dF9hbGlnbj0iTGVmdCIsCiAgICAgICAgICAgICAgICAgICAgICBjYW5fcmV2ZWFsX3Bhc3N3b3JkPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICBFbGV2YXRlZEJ1dHRvbih0ZXh0PSLYqNiy2YYg2KjYsduM2YUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uPWljb25zLkxPR0lOLAogICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FsZT0xLAogICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0PSJyaWdodCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uX2NsaWNrPWNsb3NlX2RsZwogICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICBhY3Rpb25zX2FsaWdubWVudD1NYWluQXhpc0FsaWdubWVudC5DRU5URVIKICAgICkKICAgIHBhZ2UuZGlhbG9nID0gZGxnX21vZGFsCiAgICBkbGdfbW9kYWwub3BlbiA9IFRydWUKICAgIGF3YWl0IHBhZ2UuYWRkX2FzeW5jKFRvZG9BcHAoKSkKYXBwKG1haW4sIHZpZXc9QXBwVmlldy5XRUJfQlJPV1NFUiwgYXNzZXRzX2Rpcj0iYXNzZXRzIikK""")))
